// rootProject.name = 'performance'
// println("-" * 100)
// def propertiesFilePath = "${rootProject.getProjectDir()}${File.separator}gradle.properties"
// println("properties file path:${propertiesFilePath}")
// Properties properties = new Properties()
// properties.load(file(propertiesFilePath).newDataInputStream())
// def composingMode = properties.getProperty("mode.composing", "true").toBoolean()
// println("composing mode:${composingMode}")
// if (composingMode) {
//   println("includeBuild('local-plugin')")
//   includeBuild('local-plugin')
// } else {
//   println("include ':performance-plugin'")
//   include ':performance-plugin'
// }

def open_epic_source = false
if (open_epic_source) {
    include ':lib-epic'
    include ':lib-epic-exposed-xposedapi'
}


include ':a-simple-util'

include ':hook-core'
include ':hook-epic'
include ':hook-sandhook'
include ':hook'

include ':performance'
include ':performance-noop'

include ':demo'
